# supervisord.conf
"""
Supervisor configuration for managing multiple services in the Docker container.

This configuration file defines how Supervisor manages the following services:

1. Redis Server:
   - Message broker and result backend for Celery
   - Auto-restart enabled for reliability

2. Ollama Service:
   - Local LLM server for document processing
   - Automatically pulls the llama3 model on startup
   - Serves LLM inference requests

3. Celery Worker:
   - Background task processor for document ingestion
   - Uses solo pool for Windows compatibility
   - Processes documents asynchronously

4. FastAPI Application:
   - Main web API server
   - Listens on all interfaces (0.0.0.0:8000)
   - Handles HTTP requests and API endpoints

All services are configured to:
- Start automatically when the container starts
- Restart automatically if they crash
- Output logs to stdout/stderr for Docker logging
"""

[supervisord]
nodaemon=true

[program:redis]
command=/usr/local/bin/redis-server
autorestart=true
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:ollama]
command=sh -c "ollama serve & ollama pull llama3 && wait"
autorestart=true
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:celery]
command=celery -A celery_app.celery worker --loglevel=info --pool=solo
directory=/app
autorestart=true
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:fastapi]
command=uvicorn main:app --host 0.0.0.0 --port 8000
directory=/app
autorestart=true
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0